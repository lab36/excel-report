<?php

namespace Lab36\ExcelReport\Tests;

use Faker\Factory;
use PHPUnit\Framework\TestCase;

class CanGetDataForExcelTest extends TestCase
{

    protected function setUp(): void
    {
        parent::setUp();// TODO: Change the autogenerated stub
    }


    /** @test */
    public function should_get_data_from_array()
    {
        $faker = Factory::create();

        $data_array = [
            [
                'name' => $faker->name,
                'start_date' => $faker->date('Y-m-d'),
                'employee_cost' => $faker->numberBetween(100, 200),
            ],
            [
                'name' => $faker->name,
                'start_date' => $faker->date('Y-m-d'),
                'employee_cost' => $faker->numberBetween(100, 200),
            ],
            [
                'name' => $faker->name,
                'start_date' => $faker->date('Y-m-d'),
                'employee_cost' => $faker->numberBetween(100, 200),
            ],
        ];

        $file = FakeExcelReport::fromArray('from array', $data_array)->store('from array', __DIR__);
        $this->assertFileExists(__DIR__.'/'.$file);
    }


    /** @test */
    public function should_get_data_from_collection()
    {
        $faker = Factory::create();

        $data_collection = collect([
            [
                'name' => $faker->name,
                'start_date' => $faker->date('Y-m-d'),
                'employee_cost' => $faker->numberBetween(100, 200),
            ],
            [
                'name' => $faker->name,
                'start_date' => $faker->date('Y-m-d'),
                'employee_cost' => $faker->numberBetween(100, 200),
            ],
            [
                'name' => $faker->name,
                'start_date' => $faker->date('Y-m-d'),
                'employee_cost' => $faker->numberBetween(100, 200),
            ],
        ]);

        $file = FakeExcelReport::fromCollection('from collection', $data_collection)->store('from collection', __DIR__);
        $this->assertFileExists(__DIR__.'/'.$file);
    }
}
